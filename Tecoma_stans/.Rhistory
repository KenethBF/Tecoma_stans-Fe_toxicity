ggpubr::fill_palette("jco")
# Marginal densities along y axis
# Need to set coord_flip = TRUE, if you plan to use coord_flip()
ydens3 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_density(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
ydens4 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_boxplot(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
b1 <- insert_xaxis_grob(bmain, xdens4, grid::unit(.3, "null"), position = "top")
b1 <- insert_xaxis_grob(p1, xdens3, grid::unit(.175, "null"), position = "top")
b2 <- insert_yaxis_grob(p1, ydens4, grid::unit(.3, "null"), position = "right")
b2 <- insert_yaxis_grob(p2, ydens3, grid::unit(.175, "null"), position = "right")
ggdraw(b2)
lm_eqn1 = function(df, x, y){
m=lm(x ~ y, df)#3rd degree polynomial
summary_m<-summary(m)
pvalue<-pf(summary_m$fstatistic[1],summary_m$fstatistic[4], summary_m$fstatistic[6],lower.tail = FALSE)
pvalue<-ifelse(pvalue<0.001,"***", ifelse(pvalue<0.01, "**", ifelse(pvalue<0.05, "*","n.s.")))
eq1 <- substitute(RMR == a + b %.% LMR*","~~italic(R)^2~"="~r2*p,
list(a = format(coef(m)[1], digits = 3),
b = format(coef(m)[4], digits = 3),
r2 = format(summary(m)$r.squared, digits = 2),
p = format(pvalue)))
as.character(as.expression(eq1))
}
##### RMR vs LMR
bmain <- ggplot(Hoja_datos_proyecto, aes(x = RMR, y = LMR, color = Trat))+
geom_point(aes(size = TDM), alpha = 0.5, ) +
ggpubr::color_palette("jco")+
geom_smooth(method ="lm", formula = y ~ x) +
ggpubr::color_palette("jco")+
scale_size(expression(paste("TDM",)), range = c(0.1, 10)) +
xlab(label="RMR") + ylab(label="LMR") +
# Adjust the range of points size
ggpubr::color_palette("jco")
bmain<-pmain + annotate("text", x=0, y=0.25, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-pmain + annotate("text", x=0, y=0.23, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-pmain + annotate("text", x=0, y=0.21, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-pmain + annotate("text", x=0, y=0.19, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.25, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.23, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.21, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.19, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(color="black", size=12, angle=0),
axis.text.y = element_text(color="black", size=12, angle=0), text = element_text(size = 13))
bmain <- bmain +ggpubr::color_palette("jco")
# Marginal densities along x axis
xdens3 <- axis_canvas(bmain, axis = "x")+
geom_density(data = Hoja_datos_proyecto, aes(x = RMR, fill = Trat),
alpha = 0.7, size = 0.7)+
ggpubr::fill_palette("jco")
xdens4 <- axis_canvas(bmain, axis = "x")+
geom_boxplot(data = Hoja_datos_proyecto, aes(x = RMR, fill = Trat),
alpha = 0.7, size = 0.7)+
ggpubr::fill_palette("jco")
# Marginal densities along y axis
# Need to set coord_flip = TRUE, if you plan to use coord_flip()
ydens3 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_density(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
ydens4 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_boxplot(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
b1 <- insert_xaxis_grob(bmain, xdens4, grid::unit(.3, "null"), position = "top")
b1 <- insert_xaxis_grob(p1, xdens3, grid::unit(.175, "null"), position = "top")
b2 <- insert_yaxis_grob(p1, ydens4, grid::unit(.3, "null"), position = "right")
b2 <- insert_yaxis_grob(p2, ydens3, grid::unit(.175, "null"), position = "right")
ggdraw(b2)
lm_eqn1 = function(df, x, y){
m1=lm(x ~ y, df)#3rd degree polynomial
summary_m1<-summary(m1)
pvalue1<-pf(summary_m1$fstatistic[1],summary_m1$fstatistic[4], summary_m1$fstatistic[6],lower.tail = FALSE)
pvalue1<-ifelse(pvalue1<0.001,"***", ifelse(pvalue1<0.01, "**", ifelse(pvalue1<0.05, "*","n.s.")))
eq1 <- substitute(RMR == a + b %.% LMR*","~~italic(R)^2~"="~r2*p,
list(a = format(coef(m)[1], digits = 3),
b = format(coef(m)[4], digits = 3),
r2 = format(summary(m1)$r.squared, digits = 2),
p = format(pvalue1)))
as.character(as.expression(eq1))
}
##### RMR vs LMR
bmain <- ggplot(Hoja_datos_proyecto, aes(x = RMR, y = LMR, color = Trat))+
geom_point(aes(size = TDM), alpha = 0.5, ) +
ggpubr::color_palette("jco")+
geom_smooth(method ="lm", formula = y ~ x) +
ggpubr::color_palette("jco")+
scale_size(expression(paste("TDM",)), range = c(0.1, 10)) +
xlab(label="RMR") + ylab(label="LMR") +
# Adjust the range of points size
ggpubr::color_palette("jco")
bmain<-bmain + annotate("text", x=0, y=0.25, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
lm_eqn1 = function(df, x, y){
m1=lm(x ~ y, df)#3rd degree polynomial
summary_m1<-summary(m1)
pvalue1<-pf(summary_m1$fstatistic[1],summary_m1$fstatistic[4], summary_m1$fstatistic[6],lower.tail = FALSE)
pvalue1<-ifelse(pvalue1<0.001,"***", ifelse(pvalue1<0.01, "**", ifelse(pvalue1<0.05, "*","n.s.")))
eq1 <- substitute(RMR == a + b %.% LMR*","~~italic(R)^2~"="~r2*p,
list(a = format(coef(m1)[1], digits = 3),
b = format(coef(m1)[4], digits = 3),
r2 = format(summary(m1)$r.squared, digits = 2),
p = format(pvalue1)))
as.character(as.expression(eq1))
}
##### RMR vs LMR
bmain <- ggplot(Hoja_datos_proyecto, aes(x = RMR, y = LMR, color = Trat))+
geom_point(aes(size = TDM), alpha = 0.5, ) +
ggpubr::color_palette("jco")+
geom_smooth(method ="lm", formula = y ~ x) +
ggpubr::color_palette("jco")+
scale_size(expression(paste("TDM",)), range = c(0.1, 10)) +
xlab(label="RMR") + ylab(label="LMR") +
# Adjust the range of points size
ggpubr::color_palette("jco")
bmain<-bmain + annotate("text", x=0, y=0.25, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.23, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.21, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.19, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(color="black", size=12, angle=0),
axis.text.y = element_text(color="black", size=12, angle=0), text = element_text(size = 13))
bmain <- bmain +ggpubr::color_palette("jco")
# Marginal densities along x axis
xdens3 <- axis_canvas(bmain, axis = "x")+
geom_density(data = Hoja_datos_proyecto, aes(x = RMR, fill = Trat),
alpha = 0.7, size = 0.7)+
ggpubr::fill_palette("jco")
xdens4 <- axis_canvas(bmain, axis = "x")+
geom_boxplot(data = Hoja_datos_proyecto, aes(x = RMR, fill = Trat),
alpha = 0.7, size = 0.7)+
ggpubr::fill_palette("jco")
# Marginal densities along y axis
# Need to set coord_flip = TRUE, if you plan to use coord_flip()
ydens3 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_density(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
ydens4 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_boxplot(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
b1 <- insert_xaxis_grob(bmain, xdens4, grid::unit(.3, "null"), position = "top")
b1 <- insert_xaxis_grob(p1, xdens3, grid::unit(.175, "null"), position = "top")
b2 <- insert_yaxis_grob(p1, ydens4, grid::unit(.3, "null"), position = "right")
b2 <- insert_yaxis_grob(p2, ydens3, grid::unit(.175, "null"), position = "right")
ggdraw(b2)
ydens4 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_boxplot(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
b1 <- insert_xaxis_grob(bmain, xdens4, grid::unit(.3, "null"), position = "top")
b1 <- insert_xaxis_grob(b1, xdens3, grid::unit(.175, "null"), position = "top")
b2 <- insert_yaxis_grob(b1, ydens4, grid::unit(.3, "null"), position = "right")
b2 <- insert_yaxis_grob(b2, ydens3, grid::unit(.175, "null"), position = "right")
ggdraw(b2)
ggdraw(p2)
lm_eqn1 = function(df, x, y){
m=lm(x ~ y, df)#3rd degree polynomial
summary_m<-summary(m)
pvalue<-pf(summary_m$fstatistic[1],summary_m$fstatistic[4], summary_m$fstatistic[6],lower.tail = FALSE)
pvalue<-ifelse(pvalue<0.001,"***", ifelse(pvalue<0.01, "**", ifelse(pvalue<0.05, "*","n.s.")))
eq <- substitute(RMR == a + b %.% LMR*","~~italic(R)^2~"="~r2*p,
list(a = format(coef(m)[1], digits = 3),
b = format(coef(m)[4], digits = 3),
r2 = format(summary(m)$r.squared, digits = 2),
p = format(pvalue1)))
as.character(as.expression(eq))
}
##### RMR vs LMR
bmain <- ggplot(Hoja_datos_proyecto, aes(x = RMR, y = LMR, color = Trat))+
geom_point(aes(size = TDM), alpha = 0.5, ) +
ggpubr::color_palette("jco")+
geom_smooth(method ="lm", formula = y ~ x) +
ggpubr::color_palette("jco")+
scale_size(expression(paste("TDM",)), range = c(0.1, 10)) +
xlab(label="RMR") + ylab(label="LMR") +
# Adjust the range of points size
ggpubr::color_palette("jco")
bmain<-bmain + annotate("text", x=0, y=0.25, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
lm_eqn1 = function(df, x, y){
m=lm(x ~ y, df)#3rd degree polynomial
summary_m<-summary(m)
pvalue<-pf(summary_m$fstatistic[1],summary_m$fstatistic[4], summary_m$fstatistic[6],lower.tail = FALSE)
pvalue<-ifelse(pvalue<0.001,"***", ifelse(pvalue<0.01, "**", ifelse(pvalue<0.05, "*","n.s.")))
eq <- substitute(RMR == a + b %.% LMR*","~~italic(R)^2~"="~r2*p,
list(a = format(coef(m)[1], digits = 3),
b = format(coef(m)[4], digits = 3),
r2 = format(summary(m)$r.squared, digits = 2),
p = format(pvalue1)))
as.character(as.expression(eq))
}
##### RMR vs LMR
bmain <- ggplot(Hoja_datos_proyecto, aes(x = RMR, y = LMR, color = Trat))+
geom_point(aes(size = TDM), alpha = 0.5, ) +
ggpubr::color_palette("jco")+
geom_smooth(method ="lm", formula = y ~ x) +
ggpubr::color_palette("jco")+
scale_size(expression(paste("TDM",)), range = c(0.1, 10)) +
xlab(label="RMR") + ylab(label="LMR") +
# Adjust the range of points size
ggpubr::color_palette("jco")
bmain<-bmain + annotate("text", x=0, y=0.25, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
lm_eqn1 = function(df, x, y){
m=lm(x ~ y, df)#3rd degree polynomial
summary_m<-summary(m)
pvalue<-pf(summary_m$fstatistic[1],summary_m$fstatistic[4], summary_m$fstatistic[6],lower.tail = FALSE)
pvalue<-ifelse(pvalue<0.001,"***", ifelse(pvalue<0.01, "**", ifelse(pvalue<0.05, "*","n.s.")))
eq <- substitute(RMR == a + b %.% LMR*","~~italic(R)^2~"="~r2*p,
list(a = format(coef(m)[1], digits = 3),
b = format(coef(m)[4], digits = 3),
r2 = format(summary(m)$r.squared, digits = 2),
p = format(pvalue)))
as.character(as.expression(eq))
}
##### RMR vs LMR
bmain <- ggplot(Hoja_datos_proyecto, aes(x = RMR, y = LMR, color = Trat))+
geom_point(aes(size = TDM), alpha = 0.5, ) +
ggpubr::color_palette("jco")+
geom_smooth(method ="lm", formula = y ~ x) +
ggpubr::color_palette("jco")+
scale_size(expression(paste("TDM",)), range = c(0.1, 10)) +
xlab(label="RMR") + ylab(label="LMR") +
# Adjust the range of points size
ggpubr::color_palette("jco")
bmain<-bmain + annotate("text", x=0, y=0.25, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Control","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.23, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Hierro","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.21, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + annotate("text", x=0, y=0.19, label=lm_eqn1(Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro",],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro","RMR"],Hoja_datos_proyecto[Hoja_datos_proyecto$Trat=="Silicio+Hierro","LMR"]), hjust=0, size=4,family="Times", face="italic", parse=TRUE)
bmain<-bmain + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(color="black", size=12, angle=0),
axis.text.y = element_text(color="black", size=12, angle=0), text = element_text(size = 13))
bmain <- bmain +ggpubr::color_palette("jco")
# Marginal densities along x axis
xdens3 <- axis_canvas(bmain, axis = "x")+
geom_density(data = Hoja_datos_proyecto, aes(x = RMR, fill = Trat),
alpha = 0.7, size = 0.7)+
ggpubr::fill_palette("jco")
xdens4 <- axis_canvas(bmain, axis = "x")+
geom_boxplot(data = Hoja_datos_proyecto, aes(x = RMR, fill = Trat),
alpha = 0.7, size = 0.7)+
ggpubr::fill_palette("jco")
# Marginal densities along y axis
# Need to set coord_flip = TRUE, if you plan to use coord_flip()
ydens3 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_density(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
ydens4 <- axis_canvas(bmain, axis = "y", coord_flip = TRUE)+
geom_boxplot(data = Hoja_datos_proyecto, aes(x = LMR, fill = Trat),
alpha = 0.7, size = 0.7)+
coord_flip()+
ggpubr::fill_palette("jco")
b1 <- insert_xaxis_grob(bmain, xdens4, grid::unit(.3, "null"), position = "top")
b1 <- insert_xaxis_grob(b1, xdens3, grid::unit(.175, "null"), position = "top")
b2 <- insert_yaxis_grob(b1, ydens4, grid::unit(.3, "null"), position = "right")
b2 <- insert_yaxis_grob(b2, ydens3, grid::unit(.175, "null"), position = "right")
ggdraw(b2)
#------------------------------------------------
pdf("Results/Fig. NAR versus RGR.pdf", width=10/1.157, height=6/1.157)
ggdraw(p2)
ggdraw(b2)
dev.off()
#------------------------------------------------
# Fig. PCA plot.
#------------------------------------------------
library(factoextra)
df.PCA<-Hoja_datos_proyecto[,-c(1)]
df.PCA = df.PCA[with(df.PCA, order(-TDM)), ]
df.PCA<-na.omit(df.PCA)
res.pca1 <- prcomp(df.PCA[, c(-1)], scale = TRUE) # Remove Treatment and TDM
quali.sup <- as.factor(df.PCA[,1]) # Only treatment
View(df.PCA)
View(res.pca1)
a1<-fviz_pca_ind(res.pca1, geom = c("point"), title="",
habillage = quali.sup, addEllipses = TRUE, ellipse.level = 0.95)
a1<- a1 + theme_minimal()
a1<- a1 +  scale_shape_manual(values = c(19,15,18,17,24,25))
b1<-fviz_pca_var(res.pca1, col.var="coord", title="")
b1<- b1 +  scale_color_gradient2(low="blue", mid="green", high="red", midpoint=0.50)
b1<- b1 + theme_minimal()
pdf(file = "Results/Fig. PCA.pdf", width = 9, height = 3.75)
plot_grid(b1,a1,
labels=c(""),
ncol = 2, nrow = 1)
dev.off()
View(df.PCA)
res.pca1 <- prcomp(df.PCA[, c(-1,-2,-3,-4,-5,-6,-7,-8)], scale = TRUE) # Remove Treatment and TDM
quali.sup <- as.factor(df.PCA[,1]) # Only treatment
a1<-fviz_pca_ind(res.pca1, geom = c("point"), title="",
habillage = quali.sup, addEllipses = TRUE, ellipse.level = 0.95)
a1<- a1 + theme_minimal()
a1<- a1 +  scale_shape_manual(values = c(19,15,18,17,24,25))
b1<-fviz_pca_var(res.pca1, col.var="coord", title="")
b1<- b1 +  scale_color_gradient2(low="blue", mid="green", high="red", midpoint=0.50)
b1<- b1 + theme_minimal()
pdf(file = "Results/Fig. PCA.pdf", width = 9, height = 3.75)
plot_grid(b1,a1,
labels=c(""),
ncol = 2, nrow = 1)
dev.off()
#------------------------------------------------
library("FactoMineR")
library("factoextra")
View(pca)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8)], graph = FALSE)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,15,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,9,15,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,9,15,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,15,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,15)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,,15,16)], graph = FALSE)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,15,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
pca <- PCA(Hoja_datos_proyecto[,-c(1)], graph = FALSE)
pca <- PCA(Hoja_datos_proyecto[,-c(2)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2)], graph = FALSE)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6,7,8,10,11,12,13,14,15,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,3,4,5,6,7,8,9,10,11,12,13,14,15,16)], graph = FALSE)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,4,5,6,7,8,9,10,11,12,13,14,15,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,5,6,7,8,9,10,11,12,13,14,15,16)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2)], graph = FALSE)
View(pca)
pca <- PCA(Hoja_datos_proyecto[,-c(1,2,3,4,5,6)], graph = FALSE)
View(pca)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,2], pca$ind$coord[,3],pca$ind$coord[,4])
pca <- PCA(Hoja_datos_proyecto[,-c(1,2)], graph = FALSE)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,2], pca$ind$coord[,3],pca$ind$coord[,4])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
View(df)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,4], pca$ind$coord[,5],pca$ind$coord[,6])
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,3], pca$ind$coord[,4],pca$ind$coord[,5])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,2], pca$ind$coord[,3],pca$ind$coord[,4])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
df<-data.frame(Hoja_datos_proyecto$Trat, pca$ind$coord[,1], pca$ind$coord[,2],pca$ind$coord[,3])
names(df)<-c("Tratamiento", "PC1", "PC2", "PC3")
str(df)
library(rgl)
library(car)
scatter3d(x = df$PC1, y = df$PC2, z = df$PC3, groups = as.factor(df$Tratamiento),
xlab="PC1", ylab="PC2", zlab="PC3",axis.scales=FALSE,
surface=FALSE, ellipsoid = TRUE,level=0.95, grid = TRUE, ellipsoid.alpha= 0)
